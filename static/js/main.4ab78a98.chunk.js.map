{"version":3,"sources":["App.js","index.js","App.module.css"],"names":["App","useState","sec","setSec","status","setStatus","dblClicktime","setDblClicktime","useEffect","unsubscribe$","Subject","interval","pipe","takeUntil","subscribe","val","next","complete","start","React","useCallback","stop","reset","className","styles","container","timerDisplay","Date","toISOString","slice","button","onClick","clickTime","now","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"kNA6DeA,EAvDH,WAAO,IAAD,EACMC,mBAAS,GADf,mBACTC,EADS,KACJC,EADI,OAEYF,mBAAS,QAFrB,mBAETG,EAFS,KAEDC,EAFC,OAGwBJ,mBAAS,GAHjC,mBAGTK,EAHS,KAGKC,EAHL,KAIhBC,qBAAU,WACR,IAAMC,EAAe,IAAIC,IAQzB,OAPAC,YAAS,KACNC,KAAKC,YAAUJ,IACfK,WAAU,WACM,QAAXV,GACFD,GAAO,SAAAY,GAAG,OAAIA,EAAM,UAGnB,WACLN,EAAaO,OACbP,EAAaQ,cAEd,CAACb,IAEJ,IAAMc,EAAQC,IAAMC,aAAY,WAC9Bf,EAAU,SACT,IAEGgB,EAAOF,IAAMC,aAAY,WAC7Bf,EAAU,QACVF,EAAO,KACN,IAEGmB,EAAQH,IAAMC,aAAY,WAC9BjB,EAAO,KACN,IAUH,OACE,sBAAKoB,UAAWC,IAAOC,UAAvB,UACQ,qBAAKF,UAAWC,IAAOE,aAAvB,SAAsC,IAAIC,KAAKzB,GAAK0B,cAAcC,MAAM,GAAI,MAClF,wBAAQN,UAAWC,IAAOM,OAAQC,QAASb,EAA3C,mBAGA,wBAAQK,UAAWC,IAAOM,OAAQC,QAASV,EAA3C,kBAGA,wBAAQE,UAAWC,IAAOM,OAAQC,QAAST,EAA3C,mBACA,wBAAQC,UAAWC,IAAOM,OAAQC,QAlBzB,WACX,IAAMC,EAAYL,KAAKM,MACnBD,EAAY1B,EAAe,KAC7BD,EAAU,QAEZE,EAAgByB,IAad,sBCnDNE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,UAAY,uBAAuB,OAAS,oBAAoB,aAAe,6B","file":"static/js/main.4ab78a98.chunk.js","sourcesContent":["import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { interval, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport styles from './App.module.css';\n\nconst App = () => {\n  const [sec, setSec] = useState(0);\n  const [status, setStatus] = useState('stop');\n  const [dblClicktime, setDblClicktime] = useState(0);\n  useEffect(() => {\n    const unsubscribe$ = new Subject();\n    interval(1000)\n      .pipe(takeUntil(unsubscribe$))\n      .subscribe(() => {\n        if (status === 'run') {\n          setSec(val => val + 1000);\n        }\n      });\n    return () => {\n      unsubscribe$.next();\n      unsubscribe$.complete();\n    };\n  }, [status]);\n\n  const start = React.useCallback(() => {\n    setStatus('run');\n  }, []);\n\n  const stop = React.useCallback(() => {\n    setStatus('stop');\n    setSec(0);\n  }, []);\n\n  const reset = React.useCallback(() => {\n    setSec(0);\n  }, []);\n\n  const wait = () => {\n    const clickTime = Date.now();\n    if (clickTime - dblClicktime < 300) {\n      setStatus('wait');\n    }\n    setDblClicktime(clickTime);\n  };\n\n  return (\n    <div className={styles.container}>\n            <div className={styles.timerDisplay}>{new Date(sec).toISOString().slice(11, 19)}</div>\n      <button className={styles.button} onClick={start}>\n        Start\n      </button>\n      <button className={styles.button} onClick={stop}>\n        Stop\n      </button>\n      <button className={styles.button} onClick={reset}>Reset</button>\n      <button className={styles.button} onClick={wait}>Wait</button>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3vZcc\",\"button\":\"App_button__1I3Zs\",\"timerDisplay\":\"App_timerDisplay__xvaMr\"};"],"sourceRoot":""}